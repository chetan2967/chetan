apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  ##### creating Replicas #####
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  ##### Creating a Pod template #####
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
    # - name: nginx
        image: nginx:1.14.2
        ports:
      # - name: nginx
          containerPort: 80 
          protocol: TCP
        resources: 
          requests: 
            memory: "128Mi" 
            cpu: "250m" 
          limits: 
            memory: "256Mi" 
            cpu: "500m"

=============================================================================================== 
Create Deployment using YAML File : 
  Create  : kubectl apply â€“f deployment-definition.yml
  Delete  : kubectl delete deployment <deployment-name>

Create Deployment using Command :
  create a Deployment           : kubectl create deployment --image=nginx nginx
  Generate Deployment YAML file : kubectl create deployment --image=nginx nginx --dry-run=client -o yaml > nginx-deployment.yaml
    --dry-run=client: Ensures the command only simulates the creation and does not send anything to the Kubernetes API server.
    -o yaml: Outputs the deployment definition in YAML format.

List    : kubectl get deployments/replicaset/pods
Describe: kubectl describe deployment <deployment-name>

Roll Out  : kubectl rollout undo deployment my-app-deployment
================================================================================================
 
kubectl get all - To see all the created objects at once 
kubectl set image deployment/myapp-deployment \ nginx=nginx:1.9.1  

Roll Out Status Commands :  
kubectl rollout status deployment/myapp-deployment 
kubectl rollout history deployment/myapp-deployment 
