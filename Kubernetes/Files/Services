apiVersion: v1  
kind: Service  
metadata:
  name: my-loadbalancer-service 
type: NodePort/LoadBalancer/(clusterIP not required) 
selector:  
  app: my-app   (selector Matches Pods using labels) 
ports: (can use multi port) 
  - name: name-of-service-port 
    protocol: TCP  
    port: 80          (Port exposed by the Service) 
    targetPort: 8080  (should match the Port the container is listening on) 
    nodePort: 30000   (Static port on the Node for NodePort Services) 
================================================================================= 

Container will have a port number 
Pod has an IP Address and labels 
Services also as an IP Address and Port number 

Service is not but setting Permanent IP Address 

ClusterIP : Exposes the Service within the cluster. Internal communication between Pods. 
NodePort : Exposes the Service on a static port on each Node. Access the Service from outside the cluster. 
  Avoid Overusing NodePort: It's less secure and should be limited to specific use cases. 
LoadBalancer : Exposes the Service externally using a cloud provider's load balancer. 

 
